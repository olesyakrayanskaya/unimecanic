const arr = [10, 12, 15, 21];

for (var i = 0; i < arr.length; i++) {
  setTimeout(function () {
    console.log(arr[i] > 13 ? `Good: ${arr[i]}` : `Bad: ${arr[i]}`);
  }, 3000);
}

Данный код выведет в консоль через 3 секунды:

Bad: undefined
Bad: undefined
Bad: undefined
Bad: undefined

Переменная, объявленная с помощью ключевого слова var не имеет блочной области видимости, 
в данном случае i становится глобальной переменной, которая инициализируется в начале выполнения скрипта.
Так как выполнение функции 
function () {
    console.log(arr[i] > 13 ? `Good: ${arr[i]}` : `Bad: ${arr[i]}`);
  }
начинается через 3 секунды, в цикле for пробегаются значения i от 0 до 3, функция ни разу не выполнилась, i увеличилась до 4, 
arr[4] не существует. 

Чтобы ответ был следующим: Bad: 10, Bad: 12, Good: 15, Good: 21, нужно либо убрать setTimeout, либо объявить переменную i с помощью ключевого слова let.

for (var i = 0; i < arr.length; i++) {
  console.log(arr[i] > 13 ? `Good: ${arr[i]}` : `Bad: ${arr[i]}`);
}

или 

for (let i = 0; i < arr.length; i++) {
  setTimeout(function () {
    console.log(arr[i] > 13 ? `Good: ${arr[i]}` : `Bad: ${arr[i]}`);
  }, 3000);
}
